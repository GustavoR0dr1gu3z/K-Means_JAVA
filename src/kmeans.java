
import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;





/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gustavo
 */
public class kmeans extends javax.swing.JFrame {

    /**
     * Creates new form kmeans
     */
    public kmeans() {
        initComponents();
      //  System.out.println(puntosEnteros);
        this.setLocationRelativeTo(null); //Para que al inicio nos centre la ventana
        a1.setSelected(true); // Selección de un boton al inicial el programa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contenedor = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        puntos = new javax.swing.JTextField();
        generarP = new javax.swing.JButton();
        aplicar = new javax.swing.JButton();
        a1 = new javax.swing.JRadioButton();
        a2 = new javax.swing.JRadioButton();
        a3 = new javax.swing.JRadioButton();
        a4 = new javax.swing.JRadioButton();
        a5 = new javax.swing.JRadioButton();
        a6 = new javax.swing.JRadioButton();
        a7 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Contenedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        javax.swing.GroupLayout ContenedorLayout = new javax.swing.GroupLayout(Contenedor);
        Contenedor.setLayout(ContenedorLayout);
        ContenedorLayout.setHorizontalGroup(
            ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );
        ContenedorLayout.setVerticalGroup(
            ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        jButton1.setText("Comenzar algoritmo");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel3.setText("¿Cuántos puntos desea?");

        generarP.setText("Generar Puntos");
        generarP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generarPMouseClicked(evt);
            }
        });

        aplicar.setText("Aplicar  Atractores");
        aplicar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicarMouseClicked(evt);
            }
        });

        a1.setText("Azul");

        a2.setText("Cyan");

        a3.setText("Verde");

        a4.setText("Magenta");

        a5.setText("Naranja");

        a6.setText("Rosa");

        a7.setText("Rojo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(a2)
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(a3)
                                        .addContainerGap()))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(a4, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(a5))
                                    .addContainerGap()))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(a6)
                                    .addComponent(a7)
                                    .addComponent(a1))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generarP)
                        .addGap(379, 379, 379)
                        .addComponent(aplicar)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(236, 236, 236))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a1)
                        .addGap(18, 18, 18)
                        .addComponent(a2)
                        .addGap(18, 18, 18)
                        .addComponent(a3)
                        .addGap(18, 18, 18)
                        .addComponent(a4)
                        .addGap(18, 18, 18)
                        .addComponent(a5)
                        .addGap(18, 18, 18)
                        .addComponent(a6)
                        .addGap(18, 18, 18)
                        .addComponent(a7)
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(puntos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarP)
                    .addComponent(aplicar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        // EN PRIMER INSTANCIA COLOCAMOS QUE SE HAGA EL ALGORITMO CUANDO SE HAYAN
        // PUESTO TODOS LOS ATRACTORES
        int PuntosEnteros = Integer.parseInt(puntos.getText());           

        System.out.println(PuntosEnteros);
        
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void generarPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generarPMouseClicked
        
    boolean isNumeric1 =   puntos.getText().matches("[+-]?\\d*(\\.\\d+)?");
      
    // ELEMENTOS VACIOS
        if(puntos.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese un valor en el campo", "K-Means", JOptionPane.WARNING_MESSAGE);
            return;
        }
    
    // ELEMENTOS NUMERICOS EN EL TEXTFIELD
        if(!isNumeric1){
            JOptionPane.showMessageDialog(null, "Ingrese un valor numerico", "K-Means", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
    //Haace un parseo el cual pasa los numeros a int 
        int PuntosEnteros = Integer.parseInt(puntos.getText());        
        
    // NUMEROS POSITIVOS
        if(PuntosEnteros < 0){
            JOptionPane.showMessageDialog(null, "¡Ingrese un numero positivo! ", "K-Means", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        pintandoPuntos();
    }//GEN-LAST:event_generarPMouseClicked

    private void aplicarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicarMouseClicked
        // TODO add your handling code here:
        
        int xX = evt.getX();
        int yY = evt.getY();
        Graphics gp = Contenedor.getGraphics(); //Dibujando en el JPanel
          // Crear un grupo de Botones
            ButtonGroup grupo = new ButtonGroup();
            grupo.add(a1);
            grupo.add(a2);
            grupo.add(a3);
            grupo.add(a4);
            grupo.add(a5);      
            grupo.add(a6);      
            grupo.add(a7);      
        
            // Ver que boton seleccionó
            if(a1.isSelected()==true)
            {
             System.out.print("\nAtractor Azul     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.BLUE);
             gp.fillRect(xX, yY, 8, 8);
            }
            else if(a2.isSelected()==true)
            {
             System.out.print("\nAtractor Cyan     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.CYAN);
             gp.fillRect(xX, yY, 8, 8);
            }
            else if(a3.isSelected()==true)
            {
             System.out.print("\nAtractor Verde     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.GREEN);
             gp.fillRect(xX, yY, 8, 8);
            }
            else if(a4.isSelected()==true)
            {
             System.out.print("\nAtractor Magenta     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.MAGENTA);
             gp.fillRect(xX, yY, 6, 6);
            }
            else if(a5.isSelected()==true)
            {
             System.out.print("\nAtractor Naranja     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.ORANGE);
             gp.fillRect(xX, yY, 8, 8);
            }
             else if(a6.isSelected()==true)
            {
             System.out.print("\nAtractor Rosa     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.PINK);
             gp.fillRect(xX, yY, 6, 6);
            }
              else if(a7.isSelected()==true)
            {
             System.out.print("\nAtractor Rojo     "+"Posicion x = "+xX+" Posicion y = "+yY);
             gp.setColor(Color.RED);
             gp.fillRect(xX, yY, 8, 8);
            }
            else{
                // SIno seleccionó nada, que mande un mensaje
                JOptionPane.showMessageDialog(null, "¡Seleccione una clase! ", "Clase", JOptionPane.WARNING_MESSAGE);
            }
        
        
        return;
    }//GEN-LAST:event_aplicarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kmeans().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Contenedor;
    private javax.swing.JRadioButton a1;
    private javax.swing.JRadioButton a2;
    private javax.swing.JRadioButton a3;
    private javax.swing.JRadioButton a4;
    private javax.swing.JRadioButton a5;
    private javax.swing.JRadioButton a6;
    private javax.swing.JRadioButton a7;
    private javax.swing.JButton aplicar;
    private javax.swing.JButton generarP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField puntos;
    // End of variables declaration//GEN-END:variables


private void pintandoPuntos(){
        int PuntosEnteros = Integer.parseInt(puntos.getText());                    
        Graphics gp = Contenedor.getGraphics(); //Dibujando en el JPanel
        int numeroX,numeroY;
        
        for (int i = 1; i <= PuntosEnteros; i++) {
            numeroX = (int) (Math.random() * 700 + 1);
            numeroY = (int) (Math.random() * 320 + 1);
            gp.setColor(Color.BLACK);
            gp.fillOval(numeroX, numeroY, 5, 5);
            System.out.println("Punto "+i+": X: "+numeroX+", Y: "+numeroY);
        }
}


private void pintandoPuntosMouse(){


}



}